[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Antarctic Fur Seal Genetic Load",
    "section": "",
    "text": "Preface"
  },
  {
    "objectID": "qmd/01_sample_selection.html",
    "href": "qmd/01_sample_selection.html",
    "title": "1  Sample selection",
    "section": "",
    "text": "2 Substitutes for Sample Dropouts\nGrab five potential substitutes for each factor combination, excluding those selected in the initial sample selection. We pick up a step prior to the initial sample selection to include new concentration measurements (dna_con instead of Picogreen_con).\nWe only need substitutes for combinations of birth_year and status, for which we don’t have approved samples yet. To figure out which samples potentially still need substitutes, we lead info about the\nOverview of the samples selected for sequencing"
  },
  {
    "objectID": "qmd/01_sample_selection.html#quality-check-for-selected-samples",
    "href": "qmd/01_sample_selection.html#quality-check-for-selected-samples",
    "title": "1  Sample selection",
    "section": "1.1 Quality Check for Selected Samples",
    "text": "1.1 Quality Check for Selected Samples\n\n\n\n\n\n\n\n(a) gel_1. Samples 1–13\n\n\n\n\n\n\n\n(b) gel_2. Samples 14–26\n\n\n\n\n\n\n\n\n\n(c) gel_3. Samples 1–13\n\n\n\n\n\n\n\n(d) gel_4. Samples 14–26\n\n\n\n\n\n\n\n\n\n(e) gel_5. Samples 1–13\n\n\n\n\n\n\n\n(f) gel_6. Samples 14–26\n\n\n\n\n\n\n\n\n\n(g) gel_7. Samples 1–13\n\n\n\n\n\n\n\n(h) gel_8. Samples 14–26\n\n\n\n\n\n\n\n\n\n(i) gel_09. Samples 27–39\n\n\n\n\n\n\n\n(j) gel_10. Samples 1–13\n\n\n\n\n\n\n\n\n\n(k) gel_11. Samples 14–26\n\n\n\n\nFigure 1.1: Gels from the 2022-11-17 – 2022-12-06. Run parameters: 1% agarose gel, 70V, 45min."
  },
  {
    "objectID": "qmd/01_sample_selection.html#substitutes-for-sample-dropouts",
    "href": "qmd/01_sample_selection.html#substitutes-for-sample-dropouts",
    "title": "1  Sample selection",
    "section": "1.2 Substitutes for Sample Dropouts",
    "text": "1.2 Substitutes for Sample Dropouts\nGrab five potential substitutes for each factor combination, excluding those selected in the initial sample selection. We pick up a step prior to the initial sample selection to include new concentration measurements (dna_con instead of Picogreen_con).\n\n\ntoggle code\ndata_substitute_preselection <- data_with_con |> \n  group_by(PupBirthyear, status, pup_SNPed) |> \n  mutate(con_where_possible = if_else(is.na(dna_con) | dna_con < con_threshold,\n                                      runif(n = length(dna_con), -150, -100),\n                                      dna_con)) |>\n  left_join(tibble(unique_id = sample_selection_export$unique_id,\n                   primary_pick = TRUE),\n            by = c(PupTissueID = \"unique_id\")) |>\n  mutate(primary_pick = if_else(is.na(primary_pick), FALSE, primary_pick),\n         fitness_class = if_else(status %in% c(\"BeachDead\", \"NonRecruited\"),\n                                 \"NonRecruited\", status)) |>\n  filter(!duplicated(uniqueID_pup),\n         PupSex == \"F\",\n         fitness_class %in% c(\"Recruited\", \"NonRecruited\"),\n         !grepl(PlateNumber, pattern = \"[A-Za-z]\"),\n         !is.na(PlateNumber),\n         !primary_pick) |>\n  group_by(PupBirthyear, status, pup_SNPed) |> \n  arrange(PupBirthyear, status, pup_SNPed, con_where_possible) |> \n  mutate(selector = row_number()) |>\n  filter(selector <= 5) |>          \n  ungroup() |> \n  group_by(PupBirthyear, status) |> \n  mutate(priority = row_number()) |>\n  ungroup() |> \n  filter(priority <= 5) |>             # if possible, use SNPed samples, fill up if necessary\n  mutate(uniqueID_pup = if_else(is.na(uniqueID_pup),   # the sample from 1977 is IDed as <NA>\n                                \"ID_00\", uniqueID_pup)) # change to ID_00\n\n\n\n\ntoggle code\nsamples_without_substitutes <- read_tsv(here(\"data\", \"lab\", \"samples_for_sequencing.tsv\")) |> \n  mutate(needs_substitute = FALSE) |> \n  left_join(sample_selection_export, by = c(PupTissueID = \"tissue_id\")) |> \n  dplyr::select(birth_year, status, needs_substitute) \n\nsamples_to_remove <- read_tsv(here(\"data\", \"lab\", \"sample_dropouts.tsv\")) |> \n  dplyr::select(unique_id = uniqueID) |> \n  bind_rows(read_tsv(here(\"data\", \"lab\", \"samples_for_sequencing.tsv\")) |> \n  dplyr::select(unique_id = uniqueID)) |> \n  mutate(already_save = TRUE)\n\nprimary_samples_still_to_check <- sample_selection_export |> \n  dplyr::select(unique_id, tissue_id) |> \n  left_join(samples_to_remove) |>\n  ungroup() |> \n  mutate(already_save = replace_na(already_save, FALSE)) |> \n  filter(!already_save)\n\npotential_substitutes <- data_substitute_preselection |>\n  left_join(samples_without_substitutes, by = c(PupBirthyear = \"birth_year\", status = \"status\")) |> \n  mutate(needs_substitute = replace_na(needs_substitute, TRUE)) |> \n  filter(needs_substitute) |> \n  dplyr::select(priority,\n                tissue_id = PupTissueID,\n                uniqueID = uniqueID_pup,\n                birth_year = PupBirthyear,\n                status,\n                PlateNumber,\n                PlateLocation,\n                Picogreen_con,\n                david_con,\n                dna_con,\n                vol_wgs_nl,\n                vol_SNP_nl,\n                vol_total)\n\nsample_substitutes <- data_with_con |>\n  filter(uniqueID_pup %in% primary_samples_still_to_check$unique_id) |> \n  mutate(priority = 0)|> \n  dplyr::select(priority,\n                tissue_id = PupTissueID,\n                uniqueID = uniqueID_pup,\n                birth_year = PupBirthyear,\n                status,\n                PlateNumber,\n                PlateLocation,\n                Picogreen_con,\n                david_con,\n                dna_con,\n                vol_wgs_nl,\n                vol_SNP_nl,\n                vol_total) |> \n  bind_rows(potential_substitutes) |> \n  arrange(birth_year, status, priority) |> \n  group_by(birth_year, status) |> \n  mutate(sample_nr = row_number()) |> \n  ungroup()\n\nsample_substitutes |> \n  filter(is.na(dna_con)) |> \n  dplyr::select(-c(Picogreen_con:vol_total)) |> \n  write_tsv(here(\"data\", \"lab\", \"samples_needing_concentration_measurements.tsv\"))\n\n# sample_substitutes |> \n#   arrange(sample_nr, birth_year, status)"
  }
]